---
- hosts: all

  become: true
  become_method: sudo

  tasks:
  vars:
    ## These variables would be generated dynamically as part of your workflow
    JOB_NAME: "Prep New Container For Automations"
    
  tasks:
    - name: APT Package Upgrade
      apt:
        upgrade: yes

    - name: APT Cache Update
      apt:
        update_cache: yes
        
    - name: Update Time to NY EST Timezone
      ## Updates the time on the server to EST
      ansible.builtin.raw: sudo timedatectl set-timezone America/New_York

    - name: Create a new user
      ansible.builtin.user:
        name: "{{newuser_username}}"
        comment: "{{newuser_name}}"
        password: "{{newuser_password}}"
        group: "{{newuser_group}}"
        
    - name: Manual Upgrade
      ## code to force full upgrade. This is helpful if any was missed.
      ansible.builtin.raw: sudo apt update && apt upgrade -y && apt dist-upgrade -y
      ## pauses the script so the previous line can be successfully completed
      ansible.builtin.pause:
        minutes: 1

    - name: Remove the staging user account & home directory
      ## upgrade to local admin & delete the temp staging user from the machine
      ansible.builtin.raw: sudo su "{{localadmin_username}}"
      ansible.builtin.pause:
        prompt: "[sudo] password for {{localadmin_username}}"
        echo: "{{loggedinuser_password}}"
      ## make sure you're in the local admins home directory instead of the staging user
      ansible.builtin.raw: cd
      ansible.builtin.raw: sudo userdel "{{staginguser_username}}"
      ansible.builtin.raw: sudo rm -r "/home/{{staginguser_username}}"
      ## pause the script(for 30 seconds) in case there's any delays
      ansible.builtin.pause:
        seconds: 30

    - name: Reboot Linux Machine
      ## reboots machine to ensure that all updates & configs have been applied
      reboot:
        test_command: uptime
        reboot_timeout: 3600
